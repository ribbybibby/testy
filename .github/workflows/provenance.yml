on:
  workflow_call:
    inputs:
      image_ref:
        required: true
        type: string
jobs:
  generate-provenance:
    name: Generate provenance for image
    runs-on: ubuntu-20.04
    steps:
      # Install cosign for future steps
      - name: install-cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.4.1'
  
      # Login to the registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ghcr.io 
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      # Cosign handles figuring out the subject, so just create a mock artifact to
      # operate on. We'll discard the subject field later anyway.
      - name: Create mock artifact
        run: echo "foobar" > mock
      - name: Generate provenance
        uses: philips-labs/SLSA-Provenance-Action@8c78a6b34703824b9561a26b1ae5893beea9a332
        with:
          artifact_path: mock
  
      # Cosign only wants the contents of the predicate field, it figures out the
      # subject itself
      - name: get-predicate
        run: jq '.predicate' provenance.json > predicate.json
  
      # Sign the image
      - name: sign-image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign "${{ inputs.image_ref }}"
  
      # Attach and sign the attestation
      - name: attach-provenance
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign attest ---type slsaprovenance --predicate predicate.json --type slsaprovenance "${{ inputs.image_ref }}"
